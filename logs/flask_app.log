2024-11-04 13:40:43,961 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-11-04 13:40:43,994 - httpx - DEBUG - load_verify_locations cafile='/usr/local/lib/python3.9/site-packages/certifi/cacert.pem'
2024-11-04 13:40:48,042 - backend.server - INFO - Download request received for entity_type: invoices
2024-11-04 13:40:48,048 - backend.server - DEBUG - Received selectedIds: [3]
2024-11-04 13:40:48,048 - backend.server - INFO - Connecting to database for invoices download
2024-11-04 13:40:48,152 - backend.server - INFO - Executing query: 
                SELECT i.*, p.name AS project_name 
                FROM invoices i
                LEFT JOIN projects p ON i.project_name = p.name
                WHERE i.id = ANY(%s::integer[])
            
2024-11-04 13:40:48,153 - backend.server - DEBUG - Query parameters: [3]
2024-11-04 13:40:48,154 - backend.server - DEBUG - Converted IDs to integers: [3]
2024-11-04 13:40:48,182 - backend.server - DEBUG - Query returned 1 rows
2024-11-04 13:40:48,183 - backend.server - DEBUG - Columns: ['id', 'folder_type', 'pdf_file_name', 'project_name', 'project_name']
2024-11-04 13:40:48,206 - backend.server - DEBUG - DataFrame shape: (1, 5)
2024-11-04 13:40:48,223 - backend.server - INFO - Saving report to: /app/backend/../reports/invoices_report_20241104_134048.xlsx
2024-11-04 13:40:48,388 - backend.server - INFO - Excel file created successfully
2024-11-04 13:40:48,390 - backend.server - INFO - File size: 5518 bytes
2024-11-04 13:40:48,391 - backend.server - INFO - Sending file to client
2024-11-04 13:40:48,450 - backend.server - INFO - Database connection closed
2024-11-04 13:41:11,504 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Database Schema and Relationships:\nTable: projects\nColumns:\n  - size_of_construction\n  - number_of_floors\n  - autonomous_community\n  - construction_type\n  - ground_quality_study\n  - name\n  - end_state\n  - client\n\nTable: elements\nColumns:\n  - id\n  - invoice_id\n  - quantity\n  - price_per_unit\n  - discount\n  - total_price\n  - element_code\n  - description\n  - chapter_code\n  - chapter_title\n  - name\n  - unit\n  - subchapter_code\n  - subchapter_title\n\nTable: subelements\nColumns:\n  - total_price\n  - element_id\n  - discount\n  - id\n  - quantity\n  - price_per_unit\n  - title\n  - unit\n\nTable: invoices\nColumns:\n  - id\n  - folder_type\n  - pdf_file_name\n  - project_name\n\nForeign Key Relationships:\n- elements.invoice_id -> invoices.id\n- subelements.element_id -> elements.id\n- invoices.project_name -> projects.name\n'}, {'role': 'user', 'content': 'Hi'}], 'model': 'gpt-4o-mini', 'function_call': {'name': 'interpret_user_request'}, 'functions': [{'name': 'interpret_user_request', 'description': "Interprets the user's request and generates the appropriate action and SQL query if needed.", 'parameters': {'type': 'object', 'properties': {'action': {'type': 'string', 'enum': ['query_data', 'generate_report', 'instruct_user', 'conversation'], 'description': 'The action to perform.'}, 'sql_query': {'type': 'string', 'description': "The SQL query to execute for 'query_data' or 'generate_report' actions."}, 'report_type': {'type': 'string', 'enum': ['pdf', 'excel'], 'description': "The report format, required when action is 'generate_report'. Defaults to 'excel'."}, 'message': {'type': 'string', 'description': "Assistant's message for 'instruct_user' or 'conversation' actions."}}, 'required': ['action']}}], 'temperature': 0}}
2024-11-04 13:41:11,684 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-11-04 13:41:11,861 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7fb602069760>
2024-11-04 13:41:11,863 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7fb603293740> server_hostname='api.openai.com' timeout=5.0
2024-11-04 13:41:11,932 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7fb602069730>
2024-11-04 13:41:11,939 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-11-04 13:41:11,945 - httpcore.http11 - DEBUG - send_request_headers.complete
2024-11-04 13:41:11,946 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-11-04 13:41:11,947 - httpcore.http11 - DEBUG - send_request_body.complete
2024-11-04 13:41:11,948 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-11-04 13:41:12,499 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Nov 2024 13:41:12 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-r7fura8qpqualx1w8azxsxdh'), (b'openai-processing-ms', b'397'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199778'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'66ms'), (b'x-request-id', b'req_cc549471211de42452301519522206af'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=jyekU_16CDnWoVAplJSmdk8TCagM_w63zFa7uepT1Ew-1730727672-1.0.1.1-QlDIBRDVBuT4SCQ_7mcm2zCPChsvg4gsVhDqsRj9B7m6aGadHSycfEUywmaqKTxSSsYZo0NuCCdkJ6FLMPTWCg; path=/; expires=Mon, 04-Nov-24 14:11:12 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=qCV.WByG7V9.LO_RKBV0ORk0Q1GoGDYXilpcLEHy4Ys-1730727672006-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8dd5052aab0860cc-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-11-04 13:41:12,505 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-11-04 13:41:12,506 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-11-04 13:41:12,508 - httpcore.http11 - DEBUG - receive_response_body.complete
2024-11-04 13:41:12,509 - httpcore.http11 - DEBUG - response_closed.started
2024-11-04 13:41:12,510 - httpcore.http11 - DEBUG - response_closed.complete
2024-11-04 13:41:12,512 - openai._base_client - DEBUG - HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
2024-11-04 13:41:17,603 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Database Schema and Relationships:\nTable: projects\nColumns:\n  - size_of_construction\n  - number_of_floors\n  - autonomous_community\n  - construction_type\n  - ground_quality_study\n  - name\n  - end_state\n  - client\n\nTable: elements\nColumns:\n  - id\n  - invoice_id\n  - quantity\n  - price_per_unit\n  - discount\n  - total_price\n  - element_code\n  - description\n  - chapter_code\n  - chapter_title\n  - name\n  - unit\n  - subchapter_code\n  - subchapter_title\n\nTable: subelements\nColumns:\n  - total_price\n  - element_id\n  - discount\n  - id\n  - quantity\n  - price_per_unit\n  - title\n  - unit\n\nTable: invoices\nColumns:\n  - id\n  - folder_type\n  - pdf_file_name\n  - project_name\n\nForeign Key Relationships:\n- elements.invoice_id -> invoices.id\n- subelements.element_id -> elements.id\n- invoices.project_name -> projects.name\n'}, {'role': 'user', 'content': 'Hi'}, {'role': 'assistant', 'content': 'Hello! How can I assist you today?'}, {'role': 'user', 'content': 'Generate a report of all the invoices'}], 'model': 'gpt-4o-mini', 'function_call': {'name': 'interpret_user_request'}, 'functions': [{'name': 'interpret_user_request', 'description': "Interprets the user's request and generates the appropriate action and SQL query if needed.", 'parameters': {'type': 'object', 'properties': {'action': {'type': 'string', 'enum': ['query_data', 'generate_report', 'instruct_user', 'conversation'], 'description': 'The action to perform.'}, 'sql_query': {'type': 'string', 'description': "The SQL query to execute for 'query_data' or 'generate_report' actions."}, 'report_type': {'type': 'string', 'enum': ['pdf', 'excel'], 'description': "The report format, required when action is 'generate_report'. Defaults to 'excel'."}, 'message': {'type': 'string', 'description': "Assistant's message for 'instruct_user' or 'conversation' actions."}}, 'required': ['action']}}], 'temperature': 0}}
2024-11-04 13:41:17,606 - httpcore.connection - DEBUG - close.started
2024-11-04 13:41:17,607 - httpcore.connection - DEBUG - close.complete
2024-11-04 13:41:17,608 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-11-04 13:41:17,642 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7fb6221ef520>
2024-11-04 13:41:17,642 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7fb603293740> server_hostname='api.openai.com' timeout=5.0
2024-11-04 13:41:17,660 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7fb6221ef280>
2024-11-04 13:41:17,662 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-11-04 13:41:17,663 - httpcore.http11 - DEBUG - send_request_headers.complete
2024-11-04 13:41:17,664 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-11-04 13:41:17,665 - httpcore.http11 - DEBUG - send_request_body.complete
2024-11-04 13:41:17,666 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-11-04 13:41:18,640 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Nov 2024 13:41:18 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-r7fura8qpqualx1w8azxsxdh'), (b'openai-processing-ms', b'837'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9998'), (b'x-ratelimit-remaining-tokens', b'199758'), (b'x-ratelimit-reset-requests', b'11.59s'), (b'x-ratelimit-reset-tokens', b'72ms'), (b'x-request-id', b'req_e105dc1bc644c7cfe44bf972f0a6581e'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8dd5054e6bf21a7f-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-11-04 13:41:18,641 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-11-04 13:41:18,641 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-11-04 13:41:18,642 - httpcore.http11 - DEBUG - receive_response_body.complete
2024-11-04 13:41:18,643 - httpcore.http11 - DEBUG - response_closed.started
2024-11-04 13:41:18,645 - httpcore.http11 - DEBUG - response_closed.complete
2024-11-04 13:41:18,647 - openai._base_client - DEBUG - HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
2024-11-04 14:27:47,703 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-11-04 14:27:47,713 - httpx - DEBUG - load_verify_locations cafile='/usr/local/lib/python3.9/site-packages/certifi/cacert.pem'
2024-11-04 14:28:01,330 - backend.server - INFO - Download request received for entity_type: invoices
2024-11-04 14:28:01,334 - backend.server - DEBUG - Received selectedIds: [1]
2024-11-04 14:28:01,335 - backend.server - INFO - Connecting to database for invoices download
2024-11-04 14:28:01,446 - backend.server - INFO - Executing query: 
                SELECT i.*, p.name AS project_name 
                FROM invoices i
                LEFT JOIN projects p ON i.project_name = p.name
                WHERE i.id = ANY(%s::integer[])
            
2024-11-04 14:28:01,448 - backend.server - DEBUG - Query parameters: [1]
2024-11-04 14:28:01,449 - backend.server - DEBUG - Converted IDs to integers: [1]
2024-11-04 14:28:01,477 - backend.server - DEBUG - Query returned 1 rows
2024-11-04 14:28:01,478 - backend.server - DEBUG - Columns: ['id', 'folder_type', 'pdf_file_name', 'project_name', 'project_name']
2024-11-04 14:28:01,521 - backend.server - DEBUG - DataFrame shape: (1, 5)
2024-11-04 14:28:01,558 - backend.server - INFO - Saving report to: /app/backend/../reports/invoices_report_20241104_142801.xlsx
2024-11-04 14:28:01,900 - backend.server - INFO - Excel file created successfully
2024-11-04 14:28:01,907 - backend.server - INFO - File size: 5519 bytes
2024-11-04 14:28:01,909 - backend.server - INFO - Sending file to client
2024-11-04 14:28:01,966 - backend.server - INFO - Database connection closed
2024-11-04 14:35:37,497 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Database Schema and Relationships:\nTable: projects\nColumns:\n  - size_of_construction\n  - number_of_floors\n  - autonomous_community\n  - construction_type\n  - ground_quality_study\n  - name\n  - end_state\n  - client\n\nTable: elements\nColumns:\n  - id\n  - invoice_id\n  - quantity\n  - price_per_unit\n  - discount\n  - total_price\n  - element_code\n  - description\n  - chapter_code\n  - chapter_title\n  - name\n  - unit\n  - subchapter_code\n  - subchapter_title\n\nTable: subelements\nColumns:\n  - total_price\n  - element_id\n  - discount\n  - id\n  - quantity\n  - price_per_unit\n  - title\n  - unit\n\nTable: invoices\nColumns:\n  - id\n  - folder_type\n  - pdf_file_name\n  - project_name\n\nForeign Key Relationships:\n- elements.invoice_id -> invoices.id\n- subelements.element_id -> elements.id\n- invoices.project_name -> projects.name\n'}, {'role': 'user', 'content': 'Hi'}], 'model': 'gpt-4o-mini', 'function_call': {'name': 'interpret_user_request'}, 'functions': [{'name': 'interpret_user_request', 'description': "Interprets the user's request and generates the appropriate action and SQL query if needed.", 'parameters': {'type': 'object', 'properties': {'action': {'type': 'string', 'enum': ['query_data', 'generate_report', 'instruct_user', 'conversation'], 'description': 'The action to perform.'}, 'sql_query': {'type': 'string', 'description': "The SQL query to execute for 'query_data' or 'generate_report' actions."}, 'report_type': {'type': 'string', 'enum': ['pdf', 'excel'], 'description': "The report format, required when action is 'generate_report'. Defaults to 'excel'."}, 'message': {'type': 'string', 'description': "Assistant's message for 'instruct_user' or 'conversation' actions."}}, 'required': ['action']}}], 'temperature': 0}}
2024-11-04 14:35:38,094 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-11-04 14:35:38,458 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f84e46e7730>
2024-11-04 14:35:38,468 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7f84e5913740> server_hostname='api.openai.com' timeout=5.0
2024-11-04 14:35:38,735 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f84e46e7760>
2024-11-04 14:35:38,753 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-11-04 14:35:38,769 - httpcore.http11 - DEBUG - send_request_headers.complete
2024-11-04 14:35:38,769 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-11-04 14:35:38,774 - httpcore.http11 - DEBUG - send_request_body.complete
2024-11-04 14:35:38,774 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-11-04 14:35:39,712 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Nov 2024 14:35:39 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-r7fura8qpqualx1w8azxsxdh'), (b'openai-processing-ms', b'407'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199778'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'66ms'), (b'x-request-id', b'req_a4098dfedb80a489c8d99a0c962367e1'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=BVMr5NO7lKodopMIEmz50jvnp70xIJ.qbS3Vi0YtP8I-1730730939-1.0.1.1-YHjvr9S8GMJm7jDfaxk2jgesm6tRj9_SdAkOQ5r6E7Z6IMswE8gFWQFGqSRwJGMEzhZw0mtPVGGL_CEPteZbDA; path=/; expires=Mon, 04-Nov-24 15:05:39 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=671FxHid9S45aLz27y4wAYRuuq1ap09HyNl6KphNwjk-1730730939547-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8dd554ee6b325e22-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-11-04 14:35:39,756 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-11-04 14:35:39,775 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-11-04 14:35:39,784 - httpcore.http11 - DEBUG - receive_response_body.complete
2024-11-04 14:35:39,787 - httpcore.http11 - DEBUG - response_closed.started
2024-11-04 14:35:39,788 - httpcore.http11 - DEBUG - response_closed.complete
2024-11-04 14:35:39,790 - openai._base_client - DEBUG - HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
2024-11-04 14:35:57,153 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Database Schema and Relationships:\nTable: projects\nColumns:\n  - size_of_construction\n  - number_of_floors\n  - autonomous_community\n  - construction_type\n  - ground_quality_study\n  - name\n  - end_state\n  - client\n\nTable: elements\nColumns:\n  - id\n  - invoice_id\n  - quantity\n  - price_per_unit\n  - discount\n  - total_price\n  - element_code\n  - description\n  - chapter_code\n  - chapter_title\n  - name\n  - unit\n  - subchapter_code\n  - subchapter_title\n\nTable: subelements\nColumns:\n  - total_price\n  - element_id\n  - discount\n  - id\n  - quantity\n  - price_per_unit\n  - title\n  - unit\n\nTable: invoices\nColumns:\n  - id\n  - folder_type\n  - pdf_file_name\n  - project_name\n\nForeign Key Relationships:\n- elements.invoice_id -> invoices.id\n- subelements.element_id -> elements.id\n- invoices.project_name -> projects.name\n'}, {'role': 'user', 'content': 'Hi'}, {'role': 'assistant', 'content': 'Hello! How can I assist you today?'}, {'role': 'user', 'content': 'How many invoice do you have?'}], 'model': 'gpt-4o-mini', 'function_call': {'name': 'interpret_user_request'}, 'functions': [{'name': 'interpret_user_request', 'description': "Interprets the user's request and generates the appropriate action and SQL query if needed.", 'parameters': {'type': 'object', 'properties': {'action': {'type': 'string', 'enum': ['query_data', 'generate_report', 'instruct_user', 'conversation'], 'description': 'The action to perform.'}, 'sql_query': {'type': 'string', 'description': "The SQL query to execute for 'query_data' or 'generate_report' actions."}, 'report_type': {'type': 'string', 'enum': ['pdf', 'excel'], 'description': "The report format, required when action is 'generate_report'. Defaults to 'excel'."}, 'message': {'type': 'string', 'description': "Assistant's message for 'instruct_user' or 'conversation' actions."}}, 'required': ['action']}}], 'temperature': 0}}
2024-11-04 14:35:57,158 - httpcore.connection - DEBUG - close.started
2024-11-04 14:35:57,160 - httpcore.connection - DEBUG - close.complete
2024-11-04 14:35:57,161 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-11-04 14:35:57,194 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f85047e8520>
2024-11-04 14:35:57,195 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7f84e5913740> server_hostname='api.openai.com' timeout=5.0
2024-11-04 14:35:57,211 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f85047e8280>
2024-11-04 14:35:57,212 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-11-04 14:35:57,212 - httpcore.http11 - DEBUG - send_request_headers.complete
2024-11-04 14:35:57,214 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-11-04 14:35:57,215 - httpcore.http11 - DEBUG - send_request_body.complete
2024-11-04 14:35:57,217 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-11-04 14:35:58,104 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Nov 2024 14:35:57 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-r7fura8qpqualx1w8azxsxdh'), (b'openai-processing-ms', b'746'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199761'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'71ms'), (b'x-request-id', b'req_d312502c63797db2079a820db9ff0d83'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8dd55561a8a8cfad-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-11-04 14:35:58,105 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-11-04 14:35:58,106 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-11-04 14:35:58,107 - httpcore.http11 - DEBUG - receive_response_body.complete
2024-11-04 14:35:58,108 - httpcore.http11 - DEBUG - response_closed.started
2024-11-04 14:35:58,108 - httpcore.http11 - DEBUG - response_closed.complete
2024-11-04 14:35:58,109 - openai._base_client - DEBUG - HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
2024-11-04 14:35:58,243 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Database Schema and Relationships:\nTable: projects\nColumns:\n  - size_of_construction\n  - number_of_floors\n  - autonomous_community\n  - construction_type\n  - ground_quality_study\n  - name\n  - end_state\n  - client\n\nTable: elements\nColumns:\n  - id\n  - invoice_id\n  - quantity\n  - price_per_unit\n  - discount\n  - total_price\n  - element_code\n  - description\n  - chapter_code\n  - chapter_title\n  - name\n  - unit\n  - subchapter_code\n  - subchapter_title\n\nTable: subelements\nColumns:\n  - total_price\n  - element_id\n  - discount\n  - id\n  - quantity\n  - price_per_unit\n  - title\n  - unit\n\nTable: invoices\nColumns:\n  - id\n  - folder_type\n  - pdf_file_name\n  - project_name\n\nForeign Key Relationships:\n- elements.invoice_id -> invoices.id\n- subelements.element_id -> elements.id\n- invoices.project_name -> projects.name\n'}, {'role': 'user', 'content': 'Hi'}, {'role': 'assistant', 'content': 'Hello! How can I assist you today?'}, {'role': 'user', 'content': 'How many invoice do you have?'}, {'role': 'user', 'content': "Here are the data you need to answer the user's previous question. Create a natural language response based on the data, question, and context:\nTotal invoices: 9"}], 'model': 'gpt-4o-mini'}}
2024-11-04 14:35:58,245 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-11-04 14:35:58,248 - httpcore.http11 - DEBUG - send_request_headers.complete
2024-11-04 14:35:58,250 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-11-04 14:35:58,252 - httpcore.http11 - DEBUG - send_request_body.complete
2024-11-04 14:35:58,253 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-11-04 14:35:59,070 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Nov 2024 14:35:58 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-r7fura8qpqualx1w8azxsxdh'), (b'openai-processing-ms', b'684'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9998'), (b'x-ratelimit-remaining-tokens', b'199720'), (b'x-ratelimit-reset-requests', b'16.244s'), (b'x-ratelimit-reset-tokens', b'84ms'), (b'x-request-id', b'req_3e720d36342b0fe598e8c11042b7c12a'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8dd555682b0ccfad-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-11-04 14:35:59,073 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-11-04 14:35:59,074 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-11-04 14:35:59,075 - httpcore.http11 - DEBUG - receive_response_body.complete
2024-11-04 14:35:59,076 - httpcore.http11 - DEBUG - response_closed.started
2024-11-04 14:35:59,077 - httpcore.http11 - DEBUG - response_closed.complete
2024-11-04 14:35:59,078 - openai._base_client - DEBUG - HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
2024-11-04 14:36:08,747 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Database Schema and Relationships:\nTable: projects\nColumns:\n  - size_of_construction\n  - number_of_floors\n  - autonomous_community\n  - construction_type\n  - ground_quality_study\n  - name\n  - end_state\n  - client\n\nTable: elements\nColumns:\n  - id\n  - invoice_id\n  - quantity\n  - price_per_unit\n  - discount\n  - total_price\n  - element_code\n  - description\n  - chapter_code\n  - chapter_title\n  - name\n  - unit\n  - subchapter_code\n  - subchapter_title\n\nTable: subelements\nColumns:\n  - total_price\n  - element_id\n  - discount\n  - id\n  - quantity\n  - price_per_unit\n  - title\n  - unit\n\nTable: invoices\nColumns:\n  - id\n  - folder_type\n  - pdf_file_name\n  - project_name\n\nForeign Key Relationships:\n- elements.invoice_id -> invoices.id\n- subelements.element_id -> elements.id\n- invoices.project_name -> projects.name\n'}, {'role': 'user', 'content': 'Hi'}, {'role': 'assistant', 'content': 'Hello! How can I assist you today?'}, {'role': 'user', 'content': 'How many invoice do you have?'}, {'role': 'assistant', 'content': 'We have a total of 9 invoices available. If you need more information about any specific invoice or related details, feel free to ask!'}, {'role': 'user', 'content': 'Can you generate a report?'}], 'model': 'gpt-4o-mini', 'function_call': {'name': 'interpret_user_request'}, 'functions': [{'name': 'interpret_user_request', 'description': "Interprets the user's request and generates the appropriate action and SQL query if needed.", 'parameters': {'type': 'object', 'properties': {'action': {'type': 'string', 'enum': ['query_data', 'generate_report', 'instruct_user', 'conversation'], 'description': 'The action to perform.'}, 'sql_query': {'type': 'string', 'description': "The SQL query to execute for 'query_data' or 'generate_report' actions."}, 'report_type': {'type': 'string', 'enum': ['pdf', 'excel'], 'description': "The report format, required when action is 'generate_report'. Defaults to 'excel'."}, 'message': {'type': 'string', 'description': "Assistant's message for 'instruct_user' or 'conversation' actions."}}, 'required': ['action']}}], 'temperature': 0}}
2024-11-04 14:36:08,750 - httpcore.connection - DEBUG - close.started
2024-11-04 14:36:08,752 - httpcore.connection - DEBUG - close.complete
2024-11-04 14:36:08,754 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-11-04 14:36:08,791 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f85047fa3a0>
2024-11-04 14:36:08,791 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7f84e5913740> server_hostname='api.openai.com' timeout=5.0
2024-11-04 14:36:08,807 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f84e588b580>
2024-11-04 14:36:08,807 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-11-04 14:36:08,808 - httpcore.http11 - DEBUG - send_request_headers.complete
2024-11-04 14:36:08,809 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-11-04 14:36:08,810 - httpcore.http11 - DEBUG - send_request_body.complete
2024-11-04 14:36:08,810 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-11-04 14:36:09,335 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Nov 2024 14:36:09 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-r7fura8qpqualx1w8azxsxdh'), (b'openai-processing-ms', b'352'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9998'), (b'x-ratelimit-remaining-tokens', b'199718'), (b'x-ratelimit-reset-requests', b'14.302s'), (b'x-ratelimit-reset-tokens', b'84ms'), (b'x-request-id', b'req_398292c22009819ac2015f59be087795'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8dd555aa2c28216b-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-11-04 14:36:09,336 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-11-04 14:36:09,337 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-11-04 14:36:09,339 - httpcore.http11 - DEBUG - receive_response_body.complete
2024-11-04 14:36:09,340 - httpcore.http11 - DEBUG - response_closed.started
2024-11-04 14:36:09,341 - httpcore.http11 - DEBUG - response_closed.complete
2024-11-04 14:36:09,344 - openai._base_client - DEBUG - HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
2024-11-04 14:57:14,341 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-11-04 14:57:14,365 - httpx - DEBUG - load_verify_locations cafile='/usr/local/lib/python3.9/site-packages/certifi/cacert.pem'
2024-11-04 14:58:20,121 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Database Schema and Relationships:\nTable: projects\nColumns:\n  - size_of_construction\n  - number_of_floors\n  - autonomous_community\n  - construction_type\n  - ground_quality_study\n  - name\n  - end_state\n  - client\n\nTable: elements\nColumns:\n  - id\n  - invoice_id\n  - quantity\n  - price_per_unit\n  - discount\n  - total_price\n  - element_code\n  - description\n  - chapter_code\n  - chapter_title\n  - name\n  - unit\n  - subchapter_code\n  - subchapter_title\n\nTable: subelements\nColumns:\n  - total_price\n  - element_id\n  - discount\n  - id\n  - quantity\n  - price_per_unit\n  - title\n  - unit\n\nTable: invoices\nColumns:\n  - id\n  - folder_type\n  - pdf_file_name\n  - project_name\n\nForeign Key Relationships:\n- elements.invoice_id -> invoices.id\n- subelements.element_id -> elements.id\n- invoices.project_name -> projects.name\n'}, {'role': 'assistant', 'content': 'Hello! How can I assist you today?'}, {'role': 'user', 'content': 'How many invoice do you have?'}, {'role': 'assistant', 'content': 'We have a total of 9 invoices available. If you need more information about any specific invoice or related details, feel free to ask!'}, {'role': 'user', 'content': 'Can you generate a report?'}, {'role': 'user', 'content': 'Hi'}], 'model': 'gpt-4o-mini', 'function_call': {'name': 'interpret_user_request'}, 'functions': [{'name': 'interpret_user_request', 'description': "Interprets the user's request and generates the appropriate action and SQL query if needed.", 'parameters': {'type': 'object', 'properties': {'action': {'type': 'string', 'enum': ['query_data', 'generate_report', 'instruct_user', 'conversation'], 'description': 'The action to perform.'}, 'sql_query': {'type': 'string', 'description': "The SQL query to execute for 'query_data' or 'generate_report' actions."}, 'report_type': {'type': 'string', 'enum': ['pdf', 'excel'], 'description': "The report format, required when action is 'generate_report'. Defaults to 'excel'."}, 'message': {'type': 'string', 'description': "Assistant's message for 'instruct_user' or 'conversation' actions."}}, 'required': ['action']}}], 'temperature': 0}}
2024-11-04 14:58:20,291 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-11-04 14:58:20,527 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f888101e070>
2024-11-04 14:58:20,528 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7f88820d6740> server_hostname='api.openai.com' timeout=5.0
2024-11-04 14:58:20,562 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f888101e040>
2024-11-04 14:58:20,563 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-11-04 14:58:20,565 - httpcore.http11 - DEBUG - send_request_headers.complete
2024-11-04 14:58:20,566 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-11-04 14:58:20,567 - httpcore.http11 - DEBUG - send_request_body.complete
2024-11-04 14:58:20,569 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-11-04 14:58:21,970 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Nov 2024 14:58:21 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-r7fura8qpqualx1w8azxsxdh'), (b'openai-processing-ms', b'1024'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199718'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'84ms'), (b'x-request-id', b'req_5be48f2cf32656fc1ebbc03dd3d51d31'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=cG2DH94lFkndLWgsxseNUOjdaCMOi1csqVyKHjh7Lzc-1730732301-1.0.1.1-pDFjFp_1.bGxFXcSnybVvo.f0ZdXKw4iC.xFvahiuCVcrfKR.y98wcA0gyWawF8TTGmUO7iuWdWiRwMWX.AKZA; path=/; expires=Mon, 04-Nov-24 15:28:21 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=RtKfnKMqHZtJvY6pyWcFeLW7dyjXotqRJhP9YXk3q_c-1730732301797-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8dd5762d887e669b-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-11-04 14:58:21,974 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-11-04 14:58:21,975 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-11-04 14:58:21,977 - httpcore.http11 - DEBUG - receive_response_body.complete
2024-11-04 14:58:21,977 - httpcore.http11 - DEBUG - response_closed.started
2024-11-04 14:58:21,978 - httpcore.http11 - DEBUG - response_closed.complete
2024-11-04 14:58:21,978 - openai._base_client - DEBUG - HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
2024-11-04 14:58:24,015 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Database Schema and Relationships:\nTable: projects\nColumns:\n  - size_of_construction\n  - number_of_floors\n  - autonomous_community\n  - construction_type\n  - ground_quality_study\n  - name\n  - end_state\n  - client\n\nTable: elements\nColumns:\n  - id\n  - invoice_id\n  - quantity\n  - price_per_unit\n  - discount\n  - total_price\n  - element_code\n  - description\n  - chapter_code\n  - chapter_title\n  - name\n  - unit\n  - subchapter_code\n  - subchapter_title\n\nTable: subelements\nColumns:\n  - total_price\n  - element_id\n  - discount\n  - id\n  - quantity\n  - price_per_unit\n  - title\n  - unit\n\nTable: invoices\nColumns:\n  - id\n  - folder_type\n  - pdf_file_name\n  - project_name\n\nForeign Key Relationships:\n- elements.invoice_id -> invoices.id\n- subelements.element_id -> elements.id\n- invoices.project_name -> projects.name\n'}, {'role': 'assistant', 'content': 'We have a total of 9 invoices available. If you need more information about any specific invoice or related details, feel free to ask!'}, {'role': 'user', 'content': 'Can you generate a report?'}, {'role': 'user', 'content': 'Hi'}, {'role': 'assistant', 'content': 'Please specify the type of report you would like to generate and any specific details or filters you want to include.'}, {'role': 'user', 'content': 'Generatea a rpoert'}], 'model': 'gpt-4o-mini', 'function_call': {'name': 'interpret_user_request'}, 'functions': [{'name': 'interpret_user_request', 'description': "Interprets the user's request and generates the appropriate action and SQL query if needed.", 'parameters': {'type': 'object', 'properties': {'action': {'type': 'string', 'enum': ['query_data', 'generate_report', 'instruct_user', 'conversation'], 'description': 'The action to perform.'}, 'sql_query': {'type': 'string', 'description': "The SQL query to execute for 'query_data' or 'generate_report' actions."}, 'report_type': {'type': 'string', 'enum': ['pdf', 'excel'], 'description': "The report format, required when action is 'generate_report'. Defaults to 'excel'."}, 'message': {'type': 'string', 'description': "Assistant's message for 'instruct_user' or 'conversation' actions."}}, 'required': ['action']}}], 'temperature': 0}}
2024-11-04 14:58:24,019 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-11-04 14:58:24,021 - httpcore.http11 - DEBUG - send_request_headers.complete
2024-11-04 14:58:24,022 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-11-04 14:58:24,023 - httpcore.http11 - DEBUG - send_request_body.complete
2024-11-04 14:58:24,023 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-11-04 14:58:24,679 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Nov 2024 14:58:24 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-r7fura8qpqualx1w8azxsxdh'), (b'openai-processing-ms', b'505'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9998'), (b'x-ratelimit-remaining-tokens', b'199701'), (b'x-ratelimit-reset-requests', b'13.983s'), (b'x-ratelimit-reset-tokens', b'89ms'), (b'x-request-id', b'req_0f80739bf4f809d01ea3f8c25a420dbd'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8dd576431b74669b-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-11-04 14:58:24,681 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-11-04 14:58:24,681 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-11-04 14:58:24,682 - httpcore.http11 - DEBUG - receive_response_body.complete
2024-11-04 14:58:24,682 - httpcore.http11 - DEBUG - response_closed.started
2024-11-04 14:58:24,683 - httpcore.http11 - DEBUG - response_closed.complete
2024-11-04 14:58:24,683 - openai._base_client - DEBUG - HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
2024-11-04 15:02:47,588 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Database Schema and Relationships:\nTable: projects\nColumns:\n  - size_of_construction\n  - number_of_floors\n  - autonomous_community\n  - construction_type\n  - ground_quality_study\n  - name\n  - end_state\n  - client\n\nTable: elements\nColumns:\n  - id\n  - invoice_id\n  - quantity\n  - price_per_unit\n  - discount\n  - total_price\n  - element_code\n  - description\n  - chapter_code\n  - chapter_title\n  - name\n  - unit\n  - subchapter_code\n  - subchapter_title\n\nTable: subelements\nColumns:\n  - total_price\n  - element_id\n  - discount\n  - id\n  - quantity\n  - price_per_unit\n  - title\n  - unit\n\nTable: invoices\nColumns:\n  - id\n  - folder_type\n  - pdf_file_name\n  - project_name\n\nForeign Key Relationships:\n- elements.invoice_id -> invoices.id\n- subelements.element_id -> elements.id\n- invoices.project_name -> projects.name\n'}, {'role': 'user', 'content': 'Can you generate a report?'}, {'role': 'user', 'content': 'Hi'}, {'role': 'assistant', 'content': 'Please specify the type of report you would like to generate and any specific details or filters you want to include.'}, {'role': 'user', 'content': 'Generatea a rpoert'}, {'role': 'user', 'content': 'hi'}], 'model': 'gpt-4o-mini', 'function_call': {'name': 'interpret_user_request'}, 'functions': [{'name': 'interpret_user_request', 'description': "Interprets the user's request and generates the appropriate action and SQL query if needed.", 'parameters': {'type': 'object', 'properties': {'action': {'type': 'string', 'enum': ['query_data', 'generate_report', 'instruct_user', 'conversation'], 'description': 'The action to perform.'}, 'sql_query': {'type': 'string', 'description': "The SQL query to execute for 'query_data' or 'generate_report' actions."}, 'report_type': {'type': 'string', 'enum': ['pdf', 'excel'], 'description': "The report format, required when action is 'generate_report'. Defaults to 'excel'."}, 'message': {'type': 'string', 'description': "Assistant's message for 'instruct_user' or 'conversation' actions."}}, 'required': ['action']}}], 'temperature': 0}}
2024-11-04 15:02:47,639 - httpcore.connection - DEBUG - close.started
2024-11-04 15:02:47,656 - httpcore.connection - DEBUG - close.complete
2024-11-04 15:02:47,658 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-11-04 15:02:47,772 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f88a0fe7190>
2024-11-04 15:02:47,774 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7f88820d6740> server_hostname='api.openai.com' timeout=5.0
2024-11-04 15:02:47,819 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f88a0fe29a0>
2024-11-04 15:02:47,823 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-11-04 15:02:47,826 - httpcore.http11 - DEBUG - send_request_headers.complete
2024-11-04 15:02:47,826 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-11-04 15:02:47,827 - httpcore.http11 - DEBUG - send_request_body.complete
2024-11-04 15:02:47,827 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-11-04 15:02:49,094 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Nov 2024 15:02:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-r7fura8qpqualx1w8azxsxdh'), (b'openai-processing-ms', b'977'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199733'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'79ms'), (b'x-request-id', b'req_c9d5baa8143ecbaee589bcaf90faeb98'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8dd57cb3dcc51a82-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-11-04 15:02:49,099 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-11-04 15:02:49,102 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-11-04 15:02:49,104 - httpcore.http11 - DEBUG - receive_response_body.complete
2024-11-04 15:02:49,105 - httpcore.http11 - DEBUG - response_closed.started
2024-11-04 15:02:49,105 - httpcore.http11 - DEBUG - response_closed.complete
2024-11-04 15:02:49,106 - openai._base_client - DEBUG - HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
2024-11-04 15:03:07,254 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Database Schema and Relationships:\nTable: projects\nColumns:\n  - size_of_construction\n  - number_of_floors\n  - autonomous_community\n  - construction_type\n  - ground_quality_study\n  - name\n  - end_state\n  - client\n\nTable: elements\nColumns:\n  - id\n  - invoice_id\n  - quantity\n  - price_per_unit\n  - discount\n  - total_price\n  - element_code\n  - description\n  - chapter_code\n  - chapter_title\n  - name\n  - unit\n  - subchapter_code\n  - subchapter_title\n\nTable: subelements\nColumns:\n  - total_price\n  - element_id\n  - discount\n  - id\n  - quantity\n  - price_per_unit\n  - title\n  - unit\n\nTable: invoices\nColumns:\n  - id\n  - folder_type\n  - pdf_file_name\n  - project_name\n\nForeign Key Relationships:\n- elements.invoice_id -> invoices.id\n- subelements.element_id -> elements.id\n- invoices.project_name -> projects.name\n'}, {'role': 'assistant', 'content': 'Please specify the type of report you would like to generate and any specific details or filters you want to include.'}, {'role': 'user', 'content': 'Generatea a rpoert'}, {'role': 'user', 'content': 'hi'}, {'role': 'assistant', 'content': 'It seems like you want to generate a report, but I need more details to proceed. Please specify the type of report you need and any specific information or filters you would like to include.'}, {'role': 'user', 'content': 'Generate a report of all the elements names and quantities, together with price'}], 'model': 'gpt-4o-mini', 'function_call': {'name': 'interpret_user_request'}, 'functions': [{'name': 'interpret_user_request', 'description': "Interprets the user's request and generates the appropriate action and SQL query if needed.", 'parameters': {'type': 'object', 'properties': {'action': {'type': 'string', 'enum': ['query_data', 'generate_report', 'instruct_user', 'conversation'], 'description': 'The action to perform.'}, 'sql_query': {'type': 'string', 'description': "The SQL query to execute for 'query_data' or 'generate_report' actions."}, 'report_type': {'type': 'string', 'enum': ['pdf', 'excel'], 'description': "The report format, required when action is 'generate_report'. Defaults to 'excel'."}, 'message': {'type': 'string', 'description': "Assistant's message for 'instruct_user' or 'conversation' actions."}}, 'required': ['action']}}], 'temperature': 0}}
2024-11-04 15:03:07,256 - httpcore.connection - DEBUG - close.started
2024-11-04 15:03:07,256 - httpcore.connection - DEBUG - close.complete
2024-11-04 15:03:07,257 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-11-04 15:03:07,298 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f88a0fe9190>
2024-11-04 15:03:07,299 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7f88820d6740> server_hostname='api.openai.com' timeout=5.0
2024-11-04 15:03:07,315 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f88a0fed9a0>
2024-11-04 15:03:07,315 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-11-04 15:03:07,316 - httpcore.http11 - DEBUG - send_request_headers.complete
2024-11-04 15:03:07,317 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-11-04 15:03:07,319 - httpcore.http11 - DEBUG - send_request_body.complete
2024-11-04 15:03:07,320 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-11-04 15:03:08,136 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Nov 2024 15:03:07 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-r7fura8qpqualx1w8azxsxdh'), (b'openai-processing-ms', b'679'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199673'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'97ms'), (b'x-request-id', b'req_93871fa5bd22029dbe6fbb69afa0d363'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8dd57d2dac1769ea-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-11-04 15:03:08,138 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-11-04 15:03:08,140 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-11-04 15:03:08,140 - httpcore.http11 - DEBUG - receive_response_body.complete
2024-11-04 15:03:08,141 - httpcore.http11 - DEBUG - response_closed.started
2024-11-04 15:03:08,142 - httpcore.http11 - DEBUG - response_closed.complete
2024-11-04 15:03:08,142 - openai._base_client - DEBUG - HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
