# Use an official Python runtime as a parent image
FROM python:3.10-slim

# Set the working directory in the container
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y  --no-install-recommends\
    build-essential \
    libpq-dev \
    postgresql-client \
    netcat-openbsd \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements and install dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY backend ./backend
COPY .env .

# Create necessary directories with proper permissions
RUN mkdir -p /app/reports /app/flask_sessions /cloudsql && \
    chmod 777 /app/reports /app/flask_sessions /cloudsql

# Set environment variables
ENV PORT=8080 \
    FLASK_ENV=production \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app

EXPOSE 8080

# Create healthcheck script
RUN echo '#!/bin/bash\n\
if [ ! -z "$INSTANCE_CONNECTION_NAME" ]; then\n\
    pg_isready -h "/cloudsql/$INSTANCE_CONNECTION_NAME" -U "$DB_USER"\n\
else\n\
    pg_isready -h "$DB_HOST" -U "$DB_USER"\n\
fi' > /app/healthcheck.sh && \
    chmod +x /app/healthcheck.sh

CMD ["gunicorn", "backend.server:app", "--bind", "0.0.0.0:8080", "--workers", "4", "--threads", "2", "--timeout", "300", "--log-level", "debug"]